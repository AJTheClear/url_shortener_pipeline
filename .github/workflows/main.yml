name: URL Shortener CI/CD

on: push

jobs:
  Snyk_Scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Snyk
        run: npm install -g snyk

      - name: Run Snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test

  Build-and-Lint:
    runs-on: ubuntu-latest
    container: python:3.11
    # needs: [Snyk_Scan, SonarCloud_Scan]
    steps:
      - name: Clone down repository
        uses: actions/checkout@v4

      - name: Set up Python environment and install dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8

      - name: Lint the code
        run: |
          . venv/bin/activate
          flake8 --filename="*.py" --exclude="venv,migrations,templates" .

      - name: Upload code for subsequent jobs
        uses: actions/upload-artifact@v4
        with:
          name: code
          path: .

  SonarCloud_Scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Set up database
        run: |
          chmod +x url_shortener/init-db.sh  # Make the script executable
          ./url_shortener/init-db.sh  # Run the database initialization script

      - name: Run tests with coverage
        run: |
          pytest --cov=app --cov-report=xml --cov-report=html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: htmlcov

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  